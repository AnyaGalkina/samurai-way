{"version":3,"file":"static/js/249.d351fdd7.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","features/Chat/AddMessageForm/AddMessageForm.tsx","../node_modules/antd/es/comment/index.js","webpack://samurai-way/./src/features/Chat/ChatMessages/Message/Message.module.css?72a2","features/Chat/ChatMessages/Message/Message.tsx","features/Chat/ChatMessages/ChatMessages.tsx","features/Chat/Chat.tsx"],"sourcesContent":["export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}","import React, {ChangeEvent, useState} from 'react';\nimport {LimitTextArea} from '../../../common/components/LimitTextArea/LimitTextArea';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {AppStateType} from '../../../app/redux-store';\nimport {sendMessage} from '../chat-reducer';\nimport {io} from 'socket.io-client';\n\ntype PropsType = {}\n\n\nexport const AddMessageForm = ({}: PropsType) => {\n    const dispatch = useDispatch();\n    // const status = useSelector((state: AppStateType) => state.chatPage.status);\n    const [message, setMessage] = useState('');\n\n\n    const onChangeHandler = ( event: ChangeEvent<HTMLTextAreaElement>) => {\n        setMessage(event.currentTarget.value)\n    };\n\n    const sendMessageHandler = () => {\n        if (!message) {\n            return;\n        }\n        dispatch(sendMessage(message));\n        setMessage(\"\");\n    }\n\n    return (\n        <div>\n            <div>\n                <LimitTextArea buttonTitle={'Send'}\n                               maxLength={100}\n                               value={message}\n                               onChangeHandler={onChangeHandler}\n                               onButtonClickHandler={sendMessageHandler}\n                />\n            </div>\n        </div>\n    );\n};\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigContext } from '../config-provider';\n\nvar Comment = function Comment(_a) {\n  var actions = _a.actions,\n      author = _a.author,\n      avatar = _a.avatar,\n      children = _a.children,\n      className = _a.className,\n      content = _a.content,\n      customizePrefixCls = _a.prefixCls,\n      datetime = _a.datetime,\n      otherProps = __rest(_a, [\"actions\", \"author\", \"avatar\", \"children\", \"className\", \"content\", \"prefixCls\", \"datetime\"]);\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var renderNested = function renderNested(prefixCls, nestedChildren) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(\"\".concat(prefixCls, \"-nested\"))\n    }, nestedChildren);\n  };\n\n  var prefixCls = getPrefixCls('comment', customizePrefixCls);\n  var avatarDom = avatar ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-avatar\")\n  }, typeof avatar === 'string' ? /*#__PURE__*/React.createElement(\"img\", {\n    src: avatar,\n    alt: \"comment-avatar\"\n  }) : avatar) : null;\n  var actionDom = actions && actions.length ? /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"\".concat(prefixCls, \"-actions\")\n  }, actions.map(function (action, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: \"action-\".concat(index)\n    }, action) // eslint-disable-line react/no-array-index-key\n    ;\n  })) : null;\n  var authorContent = (author || datetime) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-content-author\")\n  }, author && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-content-author-name\")\n  }, author), datetime && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-content-author-time\")\n  }, datetime));\n  var contentDom = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-content\")\n  }, authorContent, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-content-detail\")\n  }, content), actionDom);\n  var cls = classNames(prefixCls, _defineProperty({}, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), className);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, otherProps, {\n    className: cls\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-inner\")\n  }, avatarDom, contentDom), children ? renderNested(prefixCls, children) : null);\n};\n\nexport default Comment;","// extracted by mini-css-extract-plugin\nexport default {\"chatMessageContainer\":\"Message_chatMessageContainer__2G0ig\",\"name\":\"Message_name__mAQ-T\",\"message\":\"Message_message__q-N05\"};","import React from 'react';\nimport {Divider, Comment} from 'antd';\nimport styles from \"./Message.module.css\";\nimport defaultUserAvatar from \"../../../../assets/images/defaultUserPhoto.jpg\";\nimport Avatar from '../../../../common/components/Avatar/Avatar';\nimport {ChatMessageType} from '../../chat-reducer';\n\ntype PropsType = {\n    chatMessage: ChatMessageType\n}\n\nexport const Message = ({chatMessage}: PropsType) => {\n    const {photo, userName, message} = chatMessage;\n\n    return (\n        <div className={styles.chatMessageContainer}>\n            <Comment\n                author={<a>{userName}</a>}\n                avatar={<Avatar src={photo ? photo : defaultUserAvatar}/>}\n                content={<p>{message}</p>}\n            />\n            <Divider />\n        </div>\n    );\n};\n","import React, {useEffect, useRef, useState} from 'react';\nimport {Message} from './Message/Message';\nimport {useSelector} from 'react-redux';\nimport {AppStateType} from '../../../app/redux-store';\n\ntype PropsType = {}\n\nexport const ChatMessages = ({}: PropsType) => {\n    const messagesAnchorRef = useRef<HTMLDivElement>(null);\n    const messages = useSelector((state: AppStateType) => { return state.chatPage.messages });\n    const [autoScrollIsActive, setAutoScroll] = useState(false);\n    const scrollHandler = (e: React.UIEvent<HTMLDivElement, UIEvent>) => {\n        const element = e.currentTarget;\n        if (Math.abs((element.scrollHeight - element.scrollTop) - element.clientHeight) < 300) {\n            setAutoScroll(true);\n        } else {\n            setAutoScroll(false);\n        }\n    }\n\n    useEffect(() => {\n        if (autoScrollIsActive) {\n            messagesAnchorRef.current?.scrollIntoView({ behavior: 'smooth' })\n            messagesAnchorRef.current?.scrollIntoView({ behavior: 'smooth' })\n        }\n    }, [messages]);\n\n    return (\n        <div>\n            {messages.map((message, index) => {\n                return <Message key={index} chatMessage={message}/>\n            })}\n        </div>\n    );\n};\n","import React, {useEffect} from 'react';\nimport {AddMessageForm} from './AddMessageForm/AddMessageForm';\nimport {ChatMessages} from './ChatMessages/ChatMessages';\nimport {useDispatch} from 'react-redux';\nimport {startMessagesListerning, stopMessagesListerning} from './chat-reducer';\n\n\nconst Chat = () => {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(startMessagesListerning());\n        return () => {\n            dispatch(stopMessagesListerning());\n        }\n    }, []);\n\n    return (\n        <div>\n            <ChatMessages />\n            <AddMessageForm/>\n        </div>\n    );\n};\n\nexport default Chat;"],"names":["_objectDestructuringEmpty","obj","TypeError","AddMessageForm","dispatch","useDispatch","useState","message","setMessage","LimitTextArea","buttonTitle","maxLength","value","onChangeHandler","event","currentTarget","onButtonClickHandler","sendMessage","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","_a","actions","author","avatar","children","className","content","customizePrefixCls","prefixCls","datetime","otherProps","_React$useContext","React","ConfigContext","getPrefixCls","direction","avatarDom","concat","src","alt","actionDom","map","action","index","key","authorContent","contentDom","cls","classNames","_defineProperty","_extends","nestedChildren","renderNested","Message","chatMessage","photo","userName","styles","Avatar","defaultUserAvatar","ChatMessages","messagesAnchorRef","useRef","messages","useSelector","state","chatPage","autoScrollIsActive","useEffect","current","scrollIntoView","behavior","startMessagesListerning","stopMessagesListerning"],"sourceRoot":""}